{"version":3,"sources":["components/Futurecast/Futurecast.module.css","components/Hourly/Hourly.module.css","components/Zipcode/Zipcode.module.css","components/WeatherApp/WeatherApp.module.css","components/App/App.module.css","components/Header/Header.module.css","components/CurrentConditions/CurrentConditions.module.css","components/CurrentTemp/CurrentTemp.module.css","images/sun.svg","images/moon.svg","images/partly-cloudy.svg","images/partly-cloudy-night.svg","images/rain.svg","images/snow.svg","images/thunderstorm.svg","images/cloudy.svg","reducers/index.js","components/Header/Header.jsx","images/index.js","functions/index.js","components/CurrentTemp/CurrentTemp.jsx","actions/index.js","components/Hourly/Hourly.jsx","components/CurrentConditions/CurrentConditions.jsx","components/Futurecast/Futurecast.jsx","components/WeatherApp/WeatherApp.jsx","components/Zipcode/Zipcode.jsx","components/App/App.jsx","index.jsx"],"names":["module","exports","combineReducers","currentDate","state","action","type","payload","daysOfWeek","hoursList","location","currentWeather","hourlyForecast","dailyForecast","userInput","connect","AdministrativeArea","city","LocalizedName","props","className","styles","header","sunnyIcon","moonIcon","partlyCloudyIcon","partlyCloudyNightIcon","rainIcon","snowIcon","thunderstormIcon","cloudyIcon","weatherIconSort","iconIndex","icons","weatherIcon","Temperature","currentTemp","Imperial","Value","currentCondtion","WeatherText","WeatherIcon","src","alt","getLocation","zipcode","dispatch","a","axios","get","data","getCurrentWeather","getHourlyForecast","getDailyForecast","DailyForecasts","Hourly","this","getHours","listItems","hours","map","item","index","listItem","key","EpochDateTime","hourly","list","Component","moment","add","format","CurrentConditions","currentConditions","Futurecast","getDays","EpochDate","Day","Icon","highTemp","Maximum","lowTemp","Minimum","rainChance","PrecipitationProbability","futurecast","WeatherApp","getCurrentDate","weatherApp","wrapper","Zipcode","getLocationHandler","input","current","value","React","createRef","nextProps","locationInfo","Key","ref","placeholder","onKeyUp","updateUserInput","button","onClick","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","app","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1026b830.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"futurecast\":\"Futurecast_futurecast__T11up\",\"list\":\"Futurecast_list__1CZNZ\",\"listItem\":\"Futurecast_listItem__17H6f\",\"highTemp\":\"Futurecast_highTemp__2NImv\",\"lowTemp\":\"Futurecast_lowTemp__bav9b\",\"rainChance\":\"Futurecast_rainChance__2tyd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hourly\":\"Hourly_hourly__3efeF\",\"list\":\"Hourly_list__2fgzT\",\"listItem\":\"Hourly_listItem__2--Hc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zipcode\":\"Zipcode_zipcode__3pu1E\",\"input\":\"Zipcode_input__2q_yD\",\"button\":\"Zipcode_button__2UXF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherApp\":\"WeatherApp_weatherApp__H_Oky\",\"wrapper\":\"WeatherApp_wrapper__1ZPF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentConditions\":\"CurrentConditions_currentConditions__10VhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentTemp\":\"CurrentTemp_currentTemp__2hxzH\"};","module.exports = __webpack_public_path__ + \"static/media/sun.e1bb2cc7.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.98a800c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy.bdfd9066.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.2029286b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5fcdec4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.a88d50f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.381339ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.bfd87d49.svg\";","import { combineReducers } from 'redux';\n\nconst currentDateReducer = (state='', action) => {\n    switch(action.type) {\n        case 'GET_DATE':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst daysOfWeekReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_DAYS': \n            return [...action.payload];\n        default:\n            return state;\n    }\n};\n\nconst hoursReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_HOURS':\n            return [...action.payload];\n        default:\n            return state;\n    }\n};\n\nconst locationReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_LOCATION':\n                return action.payload;\n            default:\n                return state;\n    }\n};\n\nconst currentWeatherReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_CURRENT_WEATHER':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst hourlyForecastReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_HOURLY_FORECAST':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nconst dailyForecastReducer = (state=[], action) => {\n    switch(action.type) {\n        case 'GET_DAILY_FORECAST':\n            return action.payload;\n        default:\n            return state; \n    }\n};\n\nconst userInputReducer = (state=\"\", action) => {\n    switch(action.type) {\n        case 'GET_USER_INPUT':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    currentDate: currentDateReducer,\n    daysOfWeek: daysOfWeekReducer,\n    hoursList: hoursReducer,\n    location: locationReducer,\n    currentWeather: currentWeatherReducer,\n    hourlyForecast: hourlyForecastReducer,\n    dailyForecast: dailyForecastReducer,\n    userInput: userInputReducer\n});","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Header.module.css';\n\nconst Header = (props) => {\n    return (\n        <div className={styles.header}>\n            <h2>{props.city}, {props.state}</h2>\n            <span>{props.currentDate}</span>\n        </div>\n    );\n};\n\nconst MapStateToProps = (state) => {\n    if(state.location.AdministrativeArea) {\n        return {\n            currentDate: state.currentDate,\n            city: state.location.LocalizedName,\n            state: state.location.AdministrativeArea.LocalizedName\n        };\n    } else {\n        return {};\n    }\n};\n\nexport default connect(MapStateToProps)(Header);","import sunnyIcon from './sun.svg';\nimport moonIcon from './moon.svg';\nimport partlyCloudyIcon from './partly-cloudy.svg';\nimport partlyCloudyNightIcon from './partly-cloudy-night.svg';\nimport rainIcon from './rain.svg';\nimport snowIcon from './snow.svg';\nimport thunderstormIcon from './thunderstorm.svg';\nimport cloudyIcon from './cloudy.svg';\n\nexport default {\n    sunnyIcon,\n    moonIcon,\n    partlyCloudyIcon,\n    partlyCloudyNightIcon,\n    rainIcon,\n    snowIcon,\n    thunderstormIcon,\n    cloudyIcon\n}; ","function weatherIconSort(iconIndex, icons) {\n    let weatherIcon;\n    switch(iconIndex) {\n        case 1:\n            weatherIcon = icons.sunnyIcon;\n            break;\n        case 2:\n            weatherIcon = icons.sunnyIcon;\n            break;\n        case 3:\n            weatherIcon = icons.sunnyIcon;\n            break;\n        case 4:\n            weatherIcon = icons.partlyCloudyIcon;\n            break;\n        case 5:\n            weatherIcon = icons.partlyCloudyIcon;\n            break;\n        case 6:\n            weatherIcon = icons.partlyCloudyIcon;\n            break;\n        case 7:\n            weatherIcon = icons.cloudyIcon;\n            break;\n        case 8:\n            weatherIcon = icons.cloudyIcon;\n            break;\n        case 11:\n            weatherIcon = icons.cloudyIcon;\n            break;\n        case 18:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 12:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 13:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 14:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 24:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 25:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 26:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 29:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 15:\n            weatherIcon = icons.thunderstormIcon;\n            break;\n        case 16:\n            weatherIcon = icons.thunderstormIcon;\n            break;\n        case 17:\n            weatherIcon = icons.thunderstormIcon;\n            break;\n        case 19:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 20:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 21:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 22:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 23:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 33:\n            weatherIcon = icons.moonIcon;\n            break;\n        case 34:\n            weatherIcon = icons.moonIcon;\n            break;\n        case 35:\n            weatherIcon = icons.partlyCloudyNightIcon;\n            break;\n        case 36:\n            weatherIcon = icons.partlyCloudyNightIcon;\n            break;\n        case 37:\n            weatherIcon = icons.partlyCloudyNightIcon;\n            break;\n        case 38:\n            weatherIcon = icons.partlyCloudyNightIcon;\n            break;\n        case 39:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 40:\n            weatherIcon = icons.rainIcon;\n            break;\n        case 41:\n            weatherIcon = icons.thunderstormIcon;\n            break;\n        case 42:\n            weatherIcon = icons.thunderstormIcon;\n            break;\n        case 43:\n            weatherIcon = icons.snowIcon;\n            break;\n        case 44:\n            weatherIcon = icons.snowIcon;\n            break;\n        default:\n            weatherIcon = icons.partlyCloudyIcon;\n    }\n\n    return weatherIcon;\n};\n\nexport default weatherIconSort;","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './CurrentTemp.module.css';\n\nimport icons from '../../images';\nimport weatherIconSort from '../../functions';\n\nconst CurrentTemp = (props) => {\n    return (\n        <div className={styles.currentTemp}>\n            <img src={weatherIconSort(props.weatherIcon, icons)} alt=\"Weather Icon\"/>\n            <h3>{props.currentTemp}&deg;</h3>\n            <span>{props.currentCondtion}</span>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    if(state.currentWeather.Temperature) {\n        return {\n            currentTemp: state.currentWeather.Temperature.Imperial.Value,\n            currentCondtion: state.currentWeather.WeatherText,\n            weatherIcon: state.currentWeather.WeatherIcon\n        };\n    } else {\n        return {};\n    }\n};\n\nexport default connect(mapStateToProps)(CurrentTemp);","import moment from 'moment';\nimport axios from 'axios';\n\nexport const getCurrentDate = () => {\n    return {\n        type: 'GET_DATE',\n        payload: moment().format('MMMM Do yyyy')\n    };\n};\n\nexport const getDays = () => {\n    return {\n        type: 'GET_DAYS',\n        payload: [\n            moment().add('1', 'days').format('dddd'),\n            moment().add('2', 'days').format('dddd'),\n            moment().add('3', 'days').format('dddd'),\n            moment().add('4', 'days').format('dddd'),\n            moment().add('5', 'days').format('dddd')\n        ]\n    }\n};\n\nexport const getHours = () => {\n    return {\n        type: 'GET_HOURS',\n        payload: [\n            moment().add('1', 'hours').format('ha'),\n            moment().add('2', 'hours').format('ha'),\n            moment().add('3', 'hours').format('ha')\n        ]\n    }\n};\n\nexport const getLocation = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/locations/v1/postalcodes/search?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&q=${zipcode}`);\n        dispatch({ type: 'GET_LOCATION', payload: data.data[0] });\n    }\n};\n\nexport const getCurrentWeather = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${zipcode}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&details=true`);\n        dispatch({ type: 'GET_CURRENT_WEATHER', payload: data.data[0] });\n    };\n};\n\nexport const getHourlyForecast = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${zipcode}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4`);\n        dispatch({ type: 'GET_HOURLY_FORECAST', payload: data.data });\n    }\n};\n\nexport const getDailyForecast = (zipcode) => {\n    return async (dispatch) => {\n        const data = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${zipcode}?apikey=yjhc9euukkwR393enGgBNNlSaIA1i0T4&details=true`);\n        dispatch({ type: 'GET_DAILY_FORECAST', payload: data.data.DailyForecasts });\n    }\n};\n\nexport const updateUserInput = (input) => {\n    return {\n        type: 'GET_USER_INPUT',\n        payload: input\n    }\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Hourly.module.css';\n\nimport { getHours } from '../../actions';\n\nimport icons from '../../images';\nimport weatherIconSort from '../../functions';\n\nclass Hourly extends Component {\n    componentDidMount() {\n        this.props.getHours();\n    }\n\n    render() {\n        let listItems;\n\n        if(this.props.hourlyForecast[1]) {\n            listItems = this.props.hours.map((item, index) => {\n                return <li className={styles.listItem} key={this.props.hourlyForecast[index].EpochDateTime}>\n                            <h5>{item}</h5>\n                            <img src={weatherIconSort(this.props.hourlyForecast[index].WeatherIcon, icons)} alt=\"Weather Icon\"/>\n                            <span>{this.props.hourlyForecast[index].Temperature.Value}&deg;</span>\n                        </li>\n            });\n        }\n\n        return (\n            <div className={styles.hourly}>\n                <ul className={styles.list}>\n                    {listItems ? listItems : null}\n                </ul>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        hours: state.hoursList,\n        hourlyForecast: state.hourlyForecast\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getHours\n})(Hourly);","import React from 'react';\nimport styles from './CurrentConditions.module.css';\n\nimport CurrentTemp from '../CurrentTemp/CurrentTemp';\nimport Hourly from '../Hourly/Hourly';\n\nconst CurrentConditions = () => {\n    return (\n        <div className={styles.currentConditions}>\n            <CurrentTemp />\n            <Hourly />\n        </div>\n    );\n};\n\nexport default CurrentConditions;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Futurecast.module.css';\n\nimport { getDays } from '../../actions';\n\nimport icons from '../../images';\nimport weatherIconSort from '../../functions';\n\nclass Futurecast extends Component {\n    componentDidMount() {\n        this.props.getDays();\n    }\n\n    render() {\n        let listItems;\n        if(this.props.dailyForecast[0]) {\n            listItems = this.props.daysOfWeek.map((item, index) => {\n                return <li className={styles.listItem} key={this.props.dailyForecast[index].EpochDate}>\n                    <h4>{item}</h4>\n                    <img src={weatherIconSort(this.props.dailyForecast[index].Day.Icon, icons)} alt=\"Weather Icon\"/>\n                    <div className={styles.highTemp}>\n                        <span>high</span>\n                        <h5>{this.props.dailyForecast[index].Temperature.Maximum.Value}&deg;</h5>\n                    </div>\n                    <div className={styles.lowTemp}>\n                        <span>low</span>\n                        <h5>{this.props.dailyForecast[index].Temperature.Minimum.Value}&deg;</h5>\n                    </div>\n                    <div className={styles.rainChance}>\n                        <span>rain</span>\n                        <h5>{this.props.dailyForecast[index].Day.PrecipitationProbability}%</h5>\n                    </div>\n                </li>\n            });\n        }\n\n        return (\n            <div className={styles.futurecast}>\n                <ul className={styles.list}>\n                    {listItems ? listItems : null}\n                </ul>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        daysOfWeek: state.daysOfWeek,\n        dailyForecast: state.dailyForecast\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getDays\n})(Futurecast);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './WeatherApp.module.css';\n\nimport Header from '../Header/Header';\nimport CurrentConditions from '../CurrentConditions/CurrentConditions';\nimport FutureCast from '../Futurecast/Futurecast';\n\nimport { getCurrentDate,\n         getCurrentWeather,\n         getHourlyForecast,\n         getDailyForecast,\n         getLocation\n} from '../../actions';\n\nclass WeatherApp extends Component {\n    componentDidMount() {\n        this.props.getCurrentDate();\n        this.props.getCurrentWeather('11739_PC');\n        this.props.getHourlyForecast('11739_PC');\n        this.props.getDailyForecast('11739_PC');\n        this.props.getLocation(28214);\n    }\n\n    render() {\n        return (\n            <div className={styles.weatherApp}>\n                <Header />\n                <div className={styles.wrapper}>\n                    <CurrentConditions />\n                    <FutureCast />\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = () => {\n    return {};\n};\n\nexport default connect(mapStateToProps, {\n    getCurrentDate,\n    getCurrentWeather,\n    getDailyForecast,\n    getHourlyForecast,\n    getLocation\n})(WeatherApp);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Zipcode.module.css';\n\nimport { getLocation, \n         updateUserInput,\n         getDailyForecast,\n         getCurrentWeather,\n         getHourlyForecast\n} from '../../actions';\n\nclass Zipcode extends Component {\n    constructor(props) {\n        super(props);\n        this.userInput = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if(nextProps.locationInfo.Key !== this.props.locationInfo.Key) {\n            this.props.getDailyForecast(nextProps.locationInfo.Key);\n            this.props.getHourlyForecast(nextProps.locationInfo.Key);\n            this.props.getCurrentWeather(nextProps.locationInfo.Key);\n            return true;\n        } \n        return false;\n    }\n\n    getLocationHandler = (input) => {\n        this.props.getLocation(input);\n        this.userInput.current.value = \"\";\n    }\n\n    render() {\n        return (\n            <div className={styles.zipcode}>\n                <input type=\"text\" \n                       ref={this.userInput} \n                       className={styles.input} \n                       placeholder=\"enter zipcode\"\n                       onKeyUp={() => this.props.updateUserInput(this.userInput.current.value)}\n                />\n                <button className={styles.button}\n                        onClick={() => this.getLocationHandler(this.props.userInput)}\n                >Get Weather</button>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        locationInfo: state.location,\n        userInput: state.userInput\n    }\n};\n\nexport default connect(mapStateToProps, {\n    getLocation,\n    updateUserInput,\n    getCurrentWeather,\n    getDailyForecast,\n    getHourlyForecast\n})(Zipcode);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport styles from './App.module.css';\n\nimport reducers from '../../reducers';\n\nimport WeatherApp from '../WeatherApp/WeatherApp';\nimport Zipcode from '../Zipcode/Zipcode';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <div className={styles.app}>\n                <Zipcode />\n                <WeatherApp />\n            </div>\n        </Provider>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}